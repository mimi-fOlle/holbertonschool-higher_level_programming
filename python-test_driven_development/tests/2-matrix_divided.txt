The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------

Import the function from the module:

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [[1, 2, 3], [4, 5, 6]]

** Checking negative integer 
	>>> matrix_divided(matrix, -2)
	[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

** Checking div is number
	>>> matrix_divided(matrix, 'b')
	Traceback (most recent call last):
	...
	TypeError: div must be a number

** Checking div is zero
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

** Checking missing one argument
	>>> matrix_divided(matrix)
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

** Checking element is integer or float
	>>> matrix = [[4, 'c', 5], [6, 9, 7]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

** Checking div is float('inf') 
	>>> matrix_divided(matrix, float('inf'))
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer

** Checking different size of lists
	>>> matrix = [[4, 2, 7], [8, 5]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size
