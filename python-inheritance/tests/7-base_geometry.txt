The ``8-base_geometry`` module
==============================

Using ``BaseGeometry``
----------------------

This is 7-base_geometry text file.
Import the function from the module:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	>>> bg = BaseGeometry()
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("my_int", 12)
	>>> bg.integer_validator("width", 89)
	>>> try:
	...     bg.integer_validator("name", "John")
	... except Exception as e:
	...     print("[{}] {}".format(e.__class__.__name__, e))
	[TypeError] name must be an integer

	>>> try:
	...     print(bg.area())
	... except Exception as e:
	...     print("[{}] {}".format(e.__class__.__name__, e))
	[Exception] area() is not implemented
	
	>>> try:
	...     bg.integer_validator()
	... except Exception as e:
	...     print("[{}] {}".format(e.__class__.__name__, e))
	[TypeError] integer_validator() missing 2 required positional arguments: 'name' and 'value'

	>>> try:
	...     bg.integer_validator("name", 0)
	... except Exception as e:
	...     print("[{}] {}".format(e.__class__.__name__, e))
	[ValueError] name must be greater than 0

	>>> try:
	...     bg.integer_validator("name", -4)
	... except Exception as e:
	...     print("[{}] {}".format(e.__class__.__name__, e))
	[ValueError] name must be greater than 0

	>>> try:
	...     bg.integer_validator("name", (4,))
	... except Exception as e:
	...     print("[{}] {}".format(e.__class__.__name__, e))
	[NameError] name 'bg' is not defined

